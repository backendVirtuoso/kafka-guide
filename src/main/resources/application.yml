spring:
  application:
    name: kafka-guide

  datasource:
    url: jdbc:postgresql://localhost:5432/orderdb
    driver-class-name: org.postgresql.Driver
    username: postgres
    password: postdb1234

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
    database-platform: org.hibernate.dialect.PostgreSQLDialect

  kafka:
    bootstrap-servers: localhost:9092
    streams:
      application-id: order-streams-app
      bootstrap-servers: localhost:9092
      default:
        key-serde: org.apache.kafka.common.serialization.Serdes$StringSerde
        value-serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      properties:
        processing.guarantee: at_least_once
        commit.interval.ms: 1000
        state.dir: /tmp/kafka-streams-state
        state.store.cache.max.bytes: 10485760
        default.deserialization.exception.handler: org.apache.kafka.streams.errors.LogAndContinueExceptionHandler
        default.production.exception.handler: org.apache.kafka.streams.errors.DefaultProductionExceptionHandler
        num.stream.threads: 1
        replication.factor: 1
        rack.aware.assignment.strategy: none


server:
  port: 8080

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always

kafka:
  topics:
    orders: orders
    high-value-orders: high-value-orders
    fraud-alerts: fraud-alerts

schema:
  registry:
    url: http://localhost:8081

logging:
  level:
    com.example: DEBUG
    org.springframework.kafka: WARN
    org.apache.kafka: WARN
    org.apache.kafka.clients: ERROR
    org.apache.kafka.common.utils: ERROR

